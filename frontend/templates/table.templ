package templates

import (
	"fmt"
	"helia/internal/domain"
)

templ Table(tbl domain.TableData) {
	<div id="table-body">
		<div class="overflow-x-auto overflow-y-hidden relative">
			<table class="min-w-full divide-y divide-gray-200 border-r">
				@TableHeader(tbl)
				@TableBody(tbl, tbl.URLPrefix)
			</table>
		</div>
		<div class="mt-2 flex justify-center items-center">
			@TablePagination(tbl)
		</div>
		<!-- Container for HTMX-loaded dialog -->
		<div id="dialog-container" hx-on="htmx:afterSwap: deactivateActionsColumn()"></div>
	</div>
	@DeactivateActionsColumn()
}

templ TableHeader(tbl domain.TableData) {
	<thead class="bg-blue-500 text-white border-b border-white">
		<tr>
			for _, header := range tbl.Headers {
				<th scope="col" class="px-3 py-1 text-left text-xs font-medium text-white uppercase tracking-wider border-r border-white">
					{ header.Label }
				</th>
			}
			if tbl.ShowActions {
				<th scope="col" class=" actions-column px-3 py-2 text-center text-xs font-medium text-white uppercase tracking-wider w-0 whitespace-nowrap border-r border-white bg-blue-500 sticky right-0 z-10">
					Actions
				</th>
			}
		</tr>
	</thead>
}

templ TableBody(tbl domain.TableData, urlPrefix string) {
	<tbody class="bg-white divide-y divide-gray-200">
		for i, row := range tbl.Rows {
			<tr
				class={ fmt.Sprintf("hover:bg-blue-100 cursor-pointer %s", func() string {
                            if i%2 == 1 {
                                return "bg-gray-50"
                            } else {
                                return ""
                            }
                        }()) }
				onclick="selectRow(this)"
			>
				for _, cell := range row.Fields {
					<td class="px-3 py-1 whitespace-nowrap border-r">
						<div class="text-sm text-gray-900">{ cell }</div>
					</td>
				}
				if tbl.ShowActions {
					<td class="actions-column px-3 py-1 whitespace-nowrap text-right text-sm font-medium bg-white w-0 sticky right-0  z-10">
						<div class="flex space-x-1 justify-end">
							<button
								hx-get={ fmt.Sprintf("%sconfirm-update", urlPrefix) }
								hx-target="#dialog-container"
								hx-swap="innerHTML"
								hx-vals={ fmt.Sprintf(`{"url": "%s", "id": "%s"}`, urlPrefix, row.ID) }
								class="bg-indigo-500 hover:bg-indigo-700 text-white py-1 px-1 rounded text-xs flex items-center"
							>
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-4">
									<path d="M21.731 2.269a2.625 2.625 0 0 0-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 0 0 0-3.712ZM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 0 0-1.32 2.214l-.8 2.685a.75.75 0 0 0 .933.933l2.685-.8a5.25 5.25 0 0 0 2.214-1.32l8.4-8.4Z"></path>
									<path d="M5.25 5.25a3 3 0 0 0-3 3v10.5a3 3 0 0 0 3 3h10.5a3 3 0 0 0 3-3V13.5a.75.75 0 0 0-1.5 0v5.25a1.5 1.5 0 0 1-1.5 1.5H5.25a1.5 1.5 0 0 1-1.5-1.5V8.25a1.5 1.5 0 0 1 1.5-1.5h5.25a.75.75 0 0 0 0-1.5H5.25Z"></path>
								</svg>
								Izmeni
							</button>
							<button
								hx-get={ fmt.Sprintf("%sconfirm-delete", urlPrefix) }
								hx-target="#dialog-container"
								hx-swap="innerHTML"
								hx-vals={ fmt.Sprintf(`{"url": "%s", "id": "%s"}`, urlPrefix, row.ID) }
								class="bg-red-500 hover:bg-red-700 text-white py-1 px-2 rounded text-xs flex items-center"
							>
								<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="size-4 mr-1">
									<path fill-rule="evenodd" d="M16.5 4.478v.227a48.816 48.816 0 0 1 3.878.512.75.75 0 1 1-.256 1.478l-.209-.035-1.005 13.07a3 3 0 0 1-2.991 2.77H8.084a3 3 0 0 1-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 0 1-.256-1.478A48.567 48.567 0 0 1 7.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 0 1 3.369 0c1.603.051 2.815 1.387 2.815 2.951Zm-6.136-1.452a51.196 51.196 0 0 1 3.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 0 0-6 0v-.113c0-.794.609-1.428 1.364-1.452Zm-.355 5.945a.75.75 0 1 0-1.5.058l.347 9a.75.75 0 1 0 1.499-.058l-.346-9Zm5.48.058a.75.75 0 1 0-1.498-.058l-.347 9a.75.75 0 0 0 1.5.058l.345-9Z" clip-rule="evenodd"></path>
								</svg>
								Obri≈°i
							</button>
						</div>
					</td>
				}
			</tr>
		}
	</tbody>
}
